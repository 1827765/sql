-- inspecting the data 

select * from ..sales_data_sample

-- Checking the unique values 

select distinct STATUS FROM ..sales_data_sample
SELECT DISTINCT YEAR_ID FROM sales_data_sample
SELECT DISTINCT PRODUCTLINE FROM sales_data_sample
SELECT DISTINCT COUNTRY FROM sales_data_sample
SELECT DISTINCT DEALSIZE FROM sales_data_sample
SELECT DISTINCT TERRITORY FROM sales_data_sample

--- ANALYSIS
-- GROUPING OUT SALES BY DIFFERENT PRODUCT LINE 

SELECT PRODUCTLINE, SUM(SALES) TOTAL_SALES
FROM ..sales_data_sample
GROUP BY PRODUCTLINE
ORDER BY 2 DESC

-- THIS SHOWS CLASSIC CARS AS THE PRODUCT LINE WITH THE MOST SALES/REVENUE 

-- GROUPING OUT SALES BY DIFFERENT YEAR_ID
SELECT YEAR_ID, SUM(SALES) TOTAL_SALES
FROM ..sales_data_sample
GROUP BY YEAR_ID
ORDER BY 2 DESC

SELECT DISTINCT MONTH_ID FROM sales_data_sample
WHERE YEAR_ID = 2004

SELECT DISTINCT MONTH_ID FROM sales_data_sample
WHERE YEAR_ID = 2003

SELECT DISTINCT MONTH_ID FROM sales_data_sample
WHERE YEAR_ID = 2005
-- 2004 WAS THE YEAR WITH THE MOST REVENUE GENERATED, ASLO 2004 HAS A FULL YEAR OF OPERATION WHILE THE REST HAD JUST 5 MONTHS OF WWORK FLOW 

--- GROUPING OUT SALES BY DIFFERENT DEAL SIZE

SELECT DEALSIZE, SUM(SALES) TOTAL_SALES
FROM ..sales_data_sample
GROUP BY DEALSIZE
ORDER BY 2 DESC


--- GROUPING OUT SALES BY TERRITORY
SELECT TERRITORY, SUM(SALES) TOTAL_SALES
FROM ..sales_data_sample
GROUP BY TERRITORY
ORDER BY 2 DESC


--- GROUPING OUT SALES BY COUNTRY
SELECT COUNTRY, SUM(SALES) TOTAL_SALES
FROM ..sales_data_sample
GROUP BY COUNTRY
ORDER BY 2 DESC;


--- BEST MONTH FOR SALES IN A SPECIFIC YEAR 

SELECT MONTH_ID, SUM(SALES) TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDER_FREQUENCY 
FROM .. sales_data_sample
WHERE YEAR_ID = 2004 --CHANGE YEAR TO VIEW OTHERS 
GROUP BY MONTH_ID
ORDER BY 2 DESC ;
-- FOR 2004 NOVEMBER IS THE BEST MONTH IN TERMS OF SALES AND ORDERS 


SELECT MONTH_ID, PRODUCTLINE,SUM(SALES) TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDER_FREQUENCY 
FROM .. sales_data_sample
WHERE YEAR_ID = 2004 AND MONTH_ID = 11  --CHANGE YEAR AND MONTH TO COMPARE OTHERS 
GROUP BY MONTH_ID, PRODUCTLINE
ORDER BY 3 DESC;

--- WHO IS THE BEST CUSTOMER RFM

SELECT CUSTOMERNAME,
SUM(SALES) TOTAL_SALE,
AVG(SALES) AVG_SALE,
COUNT(ORDERNUMBER) ORDER_FREQ,
MAX(ORDERDATE) LAST_ORDER_DATE,
(SELECT MAX(ORDERDATE) FROM ..sales_data_sample) MAX_ORDER_DATE,
DATEDIFF(DD,MAX(ORDERDATE),(SELECT MAX(ORDERDATE) FROM ..sales_data_sample)) RECENCY
FROM ..sales_data_sample
GROUP BY CUSTOMERNAME;

-- PUTTING RFM TABLE IN A CTE/ TEMP TABLE

DROP TABLE IF EXISTS #rfm;

WITH RFM as
(
SELECT CUSTOMERNAME,
SUM(SALES) TOTAL_SALE,
AVG(SALES) AVG_SALE,
COUNT(ORDERNUMBER) ORDER_FREQ,
MAX(ORDERDATE) LAST_ORDER_DATE,
(SELECT MAX(ORDERDATE) FROM ..sales_data_sample) MAX_ORDER_DATE,
DATEDIFF(DD,MAX(ORDERDATE),(SELECT MAX(ORDERDATE) FROM ..sales_data_sample)) RECENCY
FROM ..sales_data_sample
GROUP BY CUSTOMERNAME
),
RFM_CALC AS(
SELECT R.*,
	NTILE(4) OVER(ORDER BY RECENCY DESC) RFM_RECENCY,
	NTILE(4) OVER(ORDER BY ORDER_FREQ) RFM_FREQ,
	NTILE(4) OVER(ORDER BY TOTAL_SALE) RFM_MONETARY
FROM RFM R
)

SELECT C.*, RFM_RECENCY+RFM_MONETARY+RFM_FREQ AS RFM_CELL,
 CAST(RFM_RECENCY AS varchar) +CAST(RFM_MONETARY AS varchar) +CAST(RFM_FREQ AS varchar) RFM_CELL_STRING
 INTO #rfm
FROM RFM_CALC C;


-- TO BEGIN CUSTOMER SEGEMENTATIONS
SELECT * FROM #rfm;

SELECT CUSTOMERNAME, RFM_RECENCY,RFM_MONETARY,RFM_FREQ,
	 CASE 
		WHEN RFM_CELL_STRING IN (111,112,121,122,123,132,211,212,141,114) THEN 'LOST CUSTOMER'
		WHEN RFM_CELL_STRING IN (133,134,143,244,343,334,344) THEN 'SLIPPING AWAY, PUSH MARKETING'
		WHEN RFM_CELL_STRING IN (311,411,331,313) THEN 'NEW CUSTOMERS'
		WHEN RFM_CELL_STRING IN (323,332,333,321,312,442,332,432,422) THEN 'ACTIVE CUSTOMER'
		WHEN RFM_CELL_STRING IN (433,434,443,444) THEN 'LOYAL CUSTOMER'
		END 
FROM #rfm--- TO IDENTIFY CUSTOMERS AND MAKE MARKETING CAMPAGHIN DIRECTION


--WHAT PRODUCTS ARE THE MOST OFTEN SOLD TOGETHER?
--SELECT * FROM ..sales_data_sample WHERE ORDERNUMBER = 10411
SELECT DISTINCT ORDERNUMBER, STUFF(
		(SELECT ',', CAST(PRODUCTCODE AS nvarchar)
		FROM ..sales_data_sample P
				WHERE ORDERNUMBER IN (
			SELECT ORDERNUMBER FROM(
							SELECT ORDERNUMBER, COUNT(*) RN 
							FROM ..sales_data_sample
							WHERE STATUS = 'Shipped'
							GROUP BY ORDERNUMBER) AS ORDER_COUNT
			WHERE RN = 3 --- CHANGE RN(ROW NUMBER) TO IDENTIFY NUMBER OF SIMILAR PRODUCT BEING PURCHASED 
						) AND P.ORDERNUMBER = S.ORDERNUMBER 
						FOR XML PATH ('')),
											 1, 1, '')


FROM ..sales_data_sample S
ORDER BY 2 DESC;


SELECT DISTINCT ORDERNUMBER, STUFF(
		(SELECT ',', CAST(PRODUCTCODE AS nvarchar)
		FROM ..sales_data_sample P
				WHERE ORDERNUMBER IN (
			SELECT ORDERNUMBER FROM(
							SELECT ORDERNUMBER, COUNT(*) RN 
							FROM ..sales_data_sample
							WHERE STATUS = 'Shipped'
							GROUP BY ORDERNUMBER) AS ORDER_COUNT
			WHERE RN = 3 --- CHANGE RN(ROW NUMBER) TO IDENTIFY NUMBER OF SIMILAR PRODUCT BEING PURCHASED 
						) AND P.ORDERNUMBER = S.ORDERNUMBER 
						FOR XML PATH ('')),
											 1, 1, '')


FROM ..sales_data_sample S
ORDER BY 2 DESC;



